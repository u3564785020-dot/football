document.addEventListener("DOMContentLoaded",function(){console.log("[Quantity Dropdown] DISABLED - All products now use standard quantity inputs");return;function getAllowedQuantities(maxQuantity){const max=parseInt(maxQuantity);if(isNaN(max)||max<=0)return[2];if(max===1)return[1];if(max===2)return[2];if(max===3)return[3];const quantities=[];for(let i=2;i<=max-2;i++)quantities.push(i);return quantities.push(max),quantities}function replaceQuantityInput(input){const maxQuantity=input.getAttribute("max")||input.dataset.max||10,currentValue=parseInt(input.value)||2,allowedQuantities=getAllowedQuantities(maxQuantity),select=document.createElement("select");select.className=input.className+" quantity-dropdown-custom",select.name=input.name,select.id=input.id,select.style.cssText=input.style.cssText,Array.from(input.attributes).forEach(attr=>{attr.name.startsWith("data-")&&select.setAttribute(attr.name,attr.value)});const defaultQty=allowedQuantities.includes(2)?2:allowedQuantities[0];allowedQuantities.forEach(qty=>{const option=document.createElement("option");option.value=qty,option.textContent=qty,qty===defaultQty&&(option.selected=!0),select.appendChild(option)}),select.value=defaultQty,console.log("[Quantity Dropdown] Set default value to:",defaultQty),input.parentNode.replaceChild(select,input);let isInitialEvent=!0;setTimeout(()=>{if(isInitialEvent){const changeEvent=new Event("change",{bubbles:!0});select.dispatchEvent(changeEvent),isInitialEvent=!1,console.log("[Quantity Dropdown] Triggered initial change event with value:",select.value)}},100);const parentNode=select.parentNode;if(parentNode){parentNode.style.border="none",parentNode.style.background="transparent",parentNode.style.padding="0",parentNode.style.margin="0",parentNode.style.boxShadow="none",parentNode.style.width="auto",parentNode.style.minWidth="auto",parentNode.style.maxWidth="none",console.log("[Quantity Dropdown] Removed wrapper styling from parent");const buttons=parentNode.querySelectorAll("button");console.log("[Quantity Dropdown] Found",buttons.length,"buttons in parent container"),buttons.forEach(btn=>{const btnText=btn.textContent.trim(),ariaLabel=btn.getAttribute("aria-label")||"",classes=btn.className||"";console.log("[Quantity Dropdown] Button:",{text:btnText,ariaLabel,classes}),(classes.includes("qty-btn")||classes.includes("qty-minus")||classes.includes("qty-plus")||ariaLabel.toLowerCase().includes("increase")||ariaLabel.toLowerCase().includes("decrease")||ariaLabel.toLowerCase().includes("quantity")||btnText==="+"||btnText==="\u2212"||btnText==="-"||btnText.includes("+")||btnText.includes("\u2212")||btnText.includes("-"))&&(btn.style.display="none",console.log("[Quantity Dropdown] Hiding button:",ariaLabel||classes||btnText))})}return console.log(`[Quantity Dropdown] Replaced input with dropdown. Max: ${maxQuantity}, Allowed: [${allowedQuantities.join(", ")}], Default: ${defaultQty}`),select}function processQuantityInputs(){const quantityInputs=document.querySelectorAll('input[type="number"][name*="quantity"], input[type="number"][name*="Quantity"], input[type="number"][class*="quantity"], input[type="number"][class*="qty"], input[type="text"][name*="quantity"], input[type="text"][class*="quantity"], .variant-table input[type="number"], .variants-table input[type="number"], table input[type="number"], [id*="variant_qty"], [id*="quantity"], input[min="1"][max], input[role="spinbutton"], [role="spinbutton"]');console.log(`[Quantity Dropdown] Found ${quantityInputs.length} quantity inputs`),quantityInputs.forEach(input=>{if(input.classList.contains("quantity-dropdown-processed"))return;const inputId=(input.id||"").toLowerCase(),inputName=(input.name||"").toLowerCase();(inputName.includes("quantity")||inputName.includes("qty")||inputId.includes("quantity")||inputId.includes("qty")||inputId.includes("variant_qty")||input.className.toLowerCase().includes("quantity")||input.className.toLowerCase().includes("qty")||input.placeholder&&input.placeholder.toLowerCase().includes("quantity")||input.placeholder&&input.placeholder.toLowerCase().includes("qty")||input.closest("td")?.textContent.toLowerCase().includes("quantity")||input.closest("td")?.textContent.toLowerCase().includes("qty")||input.parentElement?.textContent.toLowerCase().includes("qty")||input.getAttribute("min")==="1"&&input.hasAttribute("max"))&&(console.log("[Quantity Dropdown] Processing input:",input.id||input.name||input.className),input.classList.add("quantity-dropdown-processed"),replaceQuantityInput(input))})}function tryProcessing(){processQuantityInputs();const processedInputs=document.querySelectorAll(".quantity-dropdown-processed, .quantity-dropdown-custom");processedInputs.length===0&&retryCount<maxRetries?(retryCount++,console.log(`[Quantity Dropdown] No inputs processed yet, retrying in 300ms (attempt ${retryCount}/${maxRetries})...`),setTimeout(tryProcessing,300)):processedInputs.length>0?console.log(`[Quantity Dropdown] Successfully processed ${processedInputs.length} inputs`):console.log("[Quantity Dropdown] Max retries reached, no quantity inputs found")}});
//# sourceMappingURL=/cdn/shop/t/24/assets/quantity-dropdown-rule.js.map?v=116540106636047553911760471709
